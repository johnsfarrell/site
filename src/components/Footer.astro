---
import child_process from 'child_process'
import { GITHUB_REPO } from '../consts'

const filepath = Astro.props.filepath ?? Astro.props.file ?? ''

async function getGitFooterData(filepath: string) {
    try {
        const relativeFilePath = filepath ? await execShellCommand(`git ls-files --full-name ${filepath}`) : '';
        const longHash = await execShellCommand(`git log -n 1 --pretty=format:%H -- ${relativeFilePath}`);
        console.log(`git log -n 1 --pretty=format:%H -- ${relativeFilePath}`);
        const shortHash = await execShellCommand(`git log -n 1 --pretty=format:%h -- ${relativeFilePath}`);
        const lastModEpoch = await execShellCommand(`git log -n 1 --pretty=format:%ct -- ${relativeFilePath}`);
        const lastMod = new Date(parseInt(lastModEpoch as string) * 1000).toLocaleDateString('en-GB', {
            day: 'numeric',
            month: 'long',
            year: 'numeric',
            timeZone: 'America/New_York',
        });
        const repoLink = `https://github.com/${GITHUB_REPO}/${relativeFilePath ? 'blob' : 'tree'}/${longHash}/${relativeFilePath}`;

        return { relativeFilePath, longHash, shortHash, lastMod, repoLink, error: false };
    } catch (error) {
        console.error('Failed to get git data:', error);
        return { error: true };
    }
}

async function execShellCommand(cmd: string) {
    return new Promise((resolve, reject) => {
        child_process.exec(cmd, (error, stdout) => {
            if (error) {
                reject(error);
            }
            resolve(stdout.trim());
        });
    });
}

const showFooter = import.meta.env.MODE === 'production';
let footerData;

if (showFooter) {
    footerData = await getGitFooterData(filepath);
    console.log("\n", footerData);
}
---
<footer data-nosnippet>
    <div>{
        showFooter && footerData && !footerData.error
            ? <span>
                last updated
                <a href={footerData.repoLink} target="_blank">@{footerData.shortHash}</a>
                on {footerData.lastMod}. &#60;3
              </span>
            : <span>&#60;3</span>
    }</div>
</footer>
<style>
    html a {
        color: rgba(0, 0, 0, 0.50);
    }
    html a:hover {
        color: rgba(0, 0, 0, 0.66);
    }
    html footer {
        font-size: smaller;
        color: rgba(0, 0, 0, 0.33);
    }
</style>